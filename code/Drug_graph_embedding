{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "\n",
    "train_smiles = pd.read_csv(\"/home/jykim/Project_poster/data_split/random_train_response.csv\")[[\"pubchem\",\"SMILES2\"]].drop_duplicates().reset_index(drop=True)\n",
    "test_smiles = pd.read_csv(\"/home/jykim/Project_poster/data_split/random_test_response.csv\")[[\"pubchem\",\"SMILES2\"]].drop_duplicates().reset_index(drop=True)\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "train_smiles = pd.read_csv(\"/home/jykim/Project_poster/data_split/train_response_new.csv\")[\"SMILES2\"]\n",
    "test_smiles = pd.read_csv(\"/home/jykim/Project_poster/data_split/test_response_new.csv\")[\"SMILES2\"]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/home/jykim/anaconda3/envs/automl/lib/python3.10/site-packages/tqdm/auto.py:21: TqdmWarning: IProgress not found. Please update jupyter and ipywidgets. See https://ipywidgets.readthedocs.io/en/stable/user_install.html\n",
      "  from .autonotebook import tqdm as notebook_tqdm\n"
     ]
    }
   ],
   "source": [
    "import transformers"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(130981, 5)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>COSMIC.ID</th>\n",
       "      <th>pubchem</th>\n",
       "      <th>response</th>\n",
       "      <th>SMILES</th>\n",
       "      <th>SMILES2</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>909976</td>\n",
       "      <td>176870</td>\n",
       "      <td>0</td>\n",
       "      <td>COCCOC1=C(C=C2C(=C1)C(=NC=N2)NC3=CC=CC(=C3)C#C...</td>\n",
       "      <td>COCCOC1=C(C=C2C(=C1)C(=NC=N2)NC3=CC=CC(=C3)C#C...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>930082</td>\n",
       "      <td>176870</td>\n",
       "      <td>0</td>\n",
       "      <td>COCCOC1=C(C=C2C(=C1)C(=NC=N2)NC3=CC=CC(=C3)C#C...</td>\n",
       "      <td>COCCOC1=C(C=C2C(=C1)C(=NC=N2)NC3=CC=CC(=C3)C#C...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   COSMIC.ID  pubchem  response  \\\n",
       "0     909976   176870         0   \n",
       "1     930082   176870         0   \n",
       "\n",
       "                                              SMILES  \\\n",
       "0  COCCOC1=C(C=C2C(=C1)C(=NC=N2)NC3=CC=CC(=C3)C#C...   \n",
       "1  COCCOC1=C(C=C2C(=C1)C(=NC=N2)NC3=CC=CC(=C3)C#C...   \n",
       "\n",
       "                                             SMILES2  \n",
       "0  COCCOC1=C(C=C2C(=C1)C(=NC=N2)NC3=CC=CC(=C3)C#C...  \n",
       "1  COCCOC1=C(C=C2C(=C1)C(=NC=N2)NC3=CC=CC(=C3)C#C...  "
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "\n",
    "train_raw = pd.read_csv(\"/home/jykim/Project_poster/data_split/random_train_response.csv\")\n",
    "test_raw = pd.read_csv(\"/home/jykim/Project_poster/data_split/random_test_response.csv\")\n",
    "print(train_raw.shape)\n",
    "train_raw.head(2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "from transformers import DataCollatorWithPadding\n",
    "\n",
    "data_collator = DataCollatorWithPadding(tokenizer=tokenizer)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "from transformers import TrainingArguments, AutoModelForSequenceClassification\n",
    "\n",
    "training_args = TrainingArguments(\"test-trainer\") # 저장 경로\n",
    "\n",
    "model = AutoModelForSequenceClassification.from_pretrained(checkpoint, num_labels=2)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Skipped loading some Tensorflow models, missing a dependency. No module named 'tensorflow'\n",
      "\u001b[34m\u001b[1mwandb\u001b[0m: \u001b[33mWARNING\u001b[0m W&B installed but not logged in.  Run `wandb login` or set the WANDB_API_KEY env variable.\n",
      "/home/jykim/anaconda3/envs/automl/lib/python3.10/site-packages/torchvision/io/image.py:13: UserWarning: Failed to load image Python extension: /home/jykim/anaconda3/envs/automl/lib/python3.10/site-packages/torchvision/image.so: undefined symbol: _ZN5torch3jit17parseSchemaOrNameERKNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE\n",
      "  warn(f\"Failed to load image Python extension: {e}\")\n",
      "Skipped loading some Jax models, missing a dependency. No module named 'jax'\n"
     ]
    }
   ],
   "source": [
    "import deepchem as dc\n",
    "\n",
    "MACCS = dc.feat.MACCSKeysFingerprint()\n",
    "MAT = dc.feat.MATFeaturizer()\n",
    "Circular = dc.feat.CircularFingerprint(size=1024, radius=3)\n",
    "PCFing = dc.feat.PubChemFingerprint()\n",
    "Mol2Vec = dc.feat.Mol2VecFingerprint()\n",
    "Descriptor = dc.feat.RDKitDescriptors()\n",
    "\n",
    "featurizers = {\"MACCS_FP\":MACCS, \"MAT\":MAT, \"Circular_FP\":Circular, \"Pubchem_FP\":PCFing, \"Mol2Vec\":Mol2Vec, \"RDKit_Desc\":Descriptor}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MACCS_FP Done\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[13:12:52] UFFTYPER: Unrecognized atom type: Pt5+2 (0)\n",
      "[13:12:52] UFFTYPER: Unrecognized atom type: Pt5+2 (3)\n",
      "[13:13:01] UFFTYPER: Unrecognized charge state for atom: 59\n",
      "[13:13:02] UFFTYPER: Unrecognized charge state for atom: 59\n",
      "[13:13:29] UFFTYPER: Unrecognized atom type: Pt3+2 (0)\n",
      "[13:13:29] UFFTYPER: Unrecognized atom type: Pt3+2 (4)\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MAT Done\n",
      "Circular_FP Done\n",
      "Pubchem_FP Done\n",
      "Mol2Vec Done\n",
      "RDKit_Desc Done\n"
     ]
    }
   ],
   "source": [
    "unique_chem = sorted(list(set(train_smiles)|set(test_smiles)))\n",
    "\n",
    "\n",
    "for key, featurizer in featurizers.items():\n",
    "    features = featurizer.featurize(unique_chem)\n",
    "    features = pd.DataFrame(features)\n",
    "    features.index = unique_chem\n",
    "    features.to_csv(f\"/home/jykim/Project_poster/data_emb/chem_{key}_featurizer_D{features.shape[1]}.txt\",sep=\"\\t\")\n",
    "    print(key,\"Done\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>pubchem</th>\n",
       "      <th>SMILES2</th>\n",
       "      <th>graph2vec_emb1</th>\n",
       "      <th>graph2vec_emb2</th>\n",
       "      <th>graph2vec_emb3</th>\n",
       "      <th>graph2vec_emb4</th>\n",
       "      <th>graph2vec_emb5</th>\n",
       "      <th>graph2vec_emb6</th>\n",
       "      <th>graph2vec_emb7</th>\n",
       "      <th>graph2vec_emb8</th>\n",
       "      <th>...</th>\n",
       "      <th>graph2vec_emb291</th>\n",
       "      <th>graph2vec_emb292</th>\n",
       "      <th>graph2vec_emb293</th>\n",
       "      <th>graph2vec_emb294</th>\n",
       "      <th>graph2vec_emb295</th>\n",
       "      <th>graph2vec_emb296</th>\n",
       "      <th>graph2vec_emb297</th>\n",
       "      <th>graph2vec_emb298</th>\n",
       "      <th>graph2vec_emb299</th>\n",
       "      <th>graph2vec_emb300</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>176870.0</td>\n",
       "      <td>COCCOC1=C(C=C2C(=C1)C(=NC=N2)NC3=CC=CC(=C3)C#C...</td>\n",
       "      <td>-0.041053</td>\n",
       "      <td>0.118346</td>\n",
       "      <td>0.021245</td>\n",
       "      <td>0.079394</td>\n",
       "      <td>-0.030706</td>\n",
       "      <td>0.074855</td>\n",
       "      <td>-0.058316</td>\n",
       "      <td>-0.071886</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.024490</td>\n",
       "      <td>0.004303</td>\n",
       "      <td>-0.021115</td>\n",
       "      <td>0.059771</td>\n",
       "      <td>0.078045</td>\n",
       "      <td>-0.015378</td>\n",
       "      <td>0.030904</td>\n",
       "      <td>-0.065989</td>\n",
       "      <td>0.050212</td>\n",
       "      <td>-0.008835</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>5384616.0</td>\n",
       "      <td>C1=CC=C(C=C1)N=C(NC#N)[N]C#N</td>\n",
       "      <td>-0.036882</td>\n",
       "      <td>0.108238</td>\n",
       "      <td>0.019084</td>\n",
       "      <td>0.073747</td>\n",
       "      <td>-0.026994</td>\n",
       "      <td>0.069540</td>\n",
       "      <td>-0.054622</td>\n",
       "      <td>-0.065752</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.022614</td>\n",
       "      <td>0.002183</td>\n",
       "      <td>-0.020509</td>\n",
       "      <td>0.053357</td>\n",
       "      <td>0.070379</td>\n",
       "      <td>-0.011381</td>\n",
       "      <td>0.030827</td>\n",
       "      <td>-0.062725</td>\n",
       "      <td>0.047142</td>\n",
       "      <td>-0.007915</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>462382.0</td>\n",
       "      <td>CC(C)C[C@@H](C=O)NC(=O)[C@H](CC(C)C)NC(=O)[C@H...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>36314.0</td>\n",
       "      <td>CC1=C2[C@H](C(=O)[C@@]3([C@H](C[C@@H]4[C@]([C@...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>16760646.0</td>\n",
       "      <td>CCCCC(C=O)NC(=O)[C@H](CC(C)C)NC(=O)[C@@H](CC(C...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>443</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.040027</td>\n",
       "      <td>0.112021</td>\n",
       "      <td>0.017600</td>\n",
       "      <td>0.075221</td>\n",
       "      <td>-0.028345</td>\n",
       "      <td>0.073490</td>\n",
       "      <td>-0.055600</td>\n",
       "      <td>-0.070014</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.025417</td>\n",
       "      <td>0.005255</td>\n",
       "      <td>-0.020981</td>\n",
       "      <td>0.056762</td>\n",
       "      <td>0.073754</td>\n",
       "      <td>-0.012819</td>\n",
       "      <td>0.030953</td>\n",
       "      <td>-0.063973</td>\n",
       "      <td>0.049033</td>\n",
       "      <td>-0.009325</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>444</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.033798</td>\n",
       "      <td>0.098773</td>\n",
       "      <td>0.016847</td>\n",
       "      <td>0.066360</td>\n",
       "      <td>-0.023115</td>\n",
       "      <td>0.063467</td>\n",
       "      <td>-0.048379</td>\n",
       "      <td>-0.060225</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.020735</td>\n",
       "      <td>0.002308</td>\n",
       "      <td>-0.018732</td>\n",
       "      <td>0.050462</td>\n",
       "      <td>0.067863</td>\n",
       "      <td>-0.011689</td>\n",
       "      <td>0.027029</td>\n",
       "      <td>-0.056719</td>\n",
       "      <td>0.041651</td>\n",
       "      <td>-0.007304</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>445</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.044009</td>\n",
       "      <td>0.121616</td>\n",
       "      <td>0.020124</td>\n",
       "      <td>0.081270</td>\n",
       "      <td>-0.027955</td>\n",
       "      <td>0.077078</td>\n",
       "      <td>-0.060673</td>\n",
       "      <td>-0.074199</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.025937</td>\n",
       "      <td>0.002967</td>\n",
       "      <td>-0.023027</td>\n",
       "      <td>0.058899</td>\n",
       "      <td>0.078081</td>\n",
       "      <td>-0.014086</td>\n",
       "      <td>0.032505</td>\n",
       "      <td>-0.069717</td>\n",
       "      <td>0.049225</td>\n",
       "      <td>-0.008248</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>446</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.033765</td>\n",
       "      <td>0.092083</td>\n",
       "      <td>0.015103</td>\n",
       "      <td>0.062005</td>\n",
       "      <td>-0.023151</td>\n",
       "      <td>0.058405</td>\n",
       "      <td>-0.046291</td>\n",
       "      <td>-0.056039</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.020578</td>\n",
       "      <td>0.003973</td>\n",
       "      <td>-0.015955</td>\n",
       "      <td>0.046277</td>\n",
       "      <td>0.060555</td>\n",
       "      <td>-0.012634</td>\n",
       "      <td>0.026718</td>\n",
       "      <td>-0.055051</td>\n",
       "      <td>0.039172</td>\n",
       "      <td>-0.004683</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>447</th>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>-0.034021</td>\n",
       "      <td>0.096073</td>\n",
       "      <td>0.014982</td>\n",
       "      <td>0.064200</td>\n",
       "      <td>-0.023333</td>\n",
       "      <td>0.061449</td>\n",
       "      <td>-0.048619</td>\n",
       "      <td>-0.058333</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.021735</td>\n",
       "      <td>0.004709</td>\n",
       "      <td>-0.018839</td>\n",
       "      <td>0.048938</td>\n",
       "      <td>0.064330</td>\n",
       "      <td>-0.012926</td>\n",
       "      <td>0.027500</td>\n",
       "      <td>-0.056702</td>\n",
       "      <td>0.041451</td>\n",
       "      <td>-0.007774</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>448 rows × 302 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        pubchem                                            SMILES2  \\\n",
       "0      176870.0  COCCOC1=C(C=C2C(=C1)C(=NC=N2)NC3=CC=CC(=C3)C#C...   \n",
       "1     5384616.0                       C1=CC=C(C=C1)N=C(NC#N)[N]C#N   \n",
       "2      462382.0  CC(C)C[C@@H](C=O)NC(=O)[C@H](CC(C)C)NC(=O)[C@H...   \n",
       "3       36314.0  CC1=C2[C@H](C(=O)[C@@]3([C@H](C[C@@H]4[C@]([C@...   \n",
       "4    16760646.0  CCCCC(C=O)NC(=O)[C@H](CC(C)C)NC(=O)[C@@H](CC(C...   \n",
       "..          ...                                                ...   \n",
       "443         NaN                                                NaN   \n",
       "444         NaN                                                NaN   \n",
       "445         NaN                                                NaN   \n",
       "446         NaN                                                NaN   \n",
       "447         NaN                                                NaN   \n",
       "\n",
       "     graph2vec_emb1  graph2vec_emb2  graph2vec_emb3  graph2vec_emb4  \\\n",
       "0         -0.041053        0.118346        0.021245        0.079394   \n",
       "1         -0.036882        0.108238        0.019084        0.073747   \n",
       "2               NaN             NaN             NaN             NaN   \n",
       "3               NaN             NaN             NaN             NaN   \n",
       "4               NaN             NaN             NaN             NaN   \n",
       "..              ...             ...             ...             ...   \n",
       "443       -0.040027        0.112021        0.017600        0.075221   \n",
       "444       -0.033798        0.098773        0.016847        0.066360   \n",
       "445       -0.044009        0.121616        0.020124        0.081270   \n",
       "446       -0.033765        0.092083        0.015103        0.062005   \n",
       "447       -0.034021        0.096073        0.014982        0.064200   \n",
       "\n",
       "     graph2vec_emb5  graph2vec_emb6  graph2vec_emb7  graph2vec_emb8  ...  \\\n",
       "0         -0.030706        0.074855       -0.058316       -0.071886  ...   \n",
       "1         -0.026994        0.069540       -0.054622       -0.065752  ...   \n",
       "2               NaN             NaN             NaN             NaN  ...   \n",
       "3               NaN             NaN             NaN             NaN  ...   \n",
       "4               NaN             NaN             NaN             NaN  ...   \n",
       "..              ...             ...             ...             ...  ...   \n",
       "443       -0.028345        0.073490       -0.055600       -0.070014  ...   \n",
       "444       -0.023115        0.063467       -0.048379       -0.060225  ...   \n",
       "445       -0.027955        0.077078       -0.060673       -0.074199  ...   \n",
       "446       -0.023151        0.058405       -0.046291       -0.056039  ...   \n",
       "447       -0.023333        0.061449       -0.048619       -0.058333  ...   \n",
       "\n",
       "     graph2vec_emb291  graph2vec_emb292  graph2vec_emb293  graph2vec_emb294  \\\n",
       "0           -0.024490          0.004303         -0.021115          0.059771   \n",
       "1           -0.022614          0.002183         -0.020509          0.053357   \n",
       "2                 NaN               NaN               NaN               NaN   \n",
       "3                 NaN               NaN               NaN               NaN   \n",
       "4                 NaN               NaN               NaN               NaN   \n",
       "..                ...               ...               ...               ...   \n",
       "443         -0.025417          0.005255         -0.020981          0.056762   \n",
       "444         -0.020735          0.002308         -0.018732          0.050462   \n",
       "445         -0.025937          0.002967         -0.023027          0.058899   \n",
       "446         -0.020578          0.003973         -0.015955          0.046277   \n",
       "447         -0.021735          0.004709         -0.018839          0.048938   \n",
       "\n",
       "     graph2vec_emb295  graph2vec_emb296  graph2vec_emb297  graph2vec_emb298  \\\n",
       "0            0.078045         -0.015378          0.030904         -0.065989   \n",
       "1            0.070379         -0.011381          0.030827         -0.062725   \n",
       "2                 NaN               NaN               NaN               NaN   \n",
       "3                 NaN               NaN               NaN               NaN   \n",
       "4                 NaN               NaN               NaN               NaN   \n",
       "..                ...               ...               ...               ...   \n",
       "443          0.073754         -0.012819          0.030953         -0.063973   \n",
       "444          0.067863         -0.011689          0.027029         -0.056719   \n",
       "445          0.078081         -0.014086          0.032505         -0.069717   \n",
       "446          0.060555         -0.012634          0.026718         -0.055051   \n",
       "447          0.064330         -0.012926          0.027500         -0.056702   \n",
       "\n",
       "     graph2vec_emb299  graph2vec_emb300  \n",
       "0            0.050212         -0.008835  \n",
       "1            0.047142         -0.007915  \n",
       "2                 NaN               NaN  \n",
       "3                 NaN               NaN  \n",
       "4                 NaN               NaN  \n",
       "..                ...               ...  \n",
       "443          0.049033         -0.009325  \n",
       "444          0.041651         -0.007304  \n",
       "445          0.049225         -0.008248  \n",
       "446          0.039172         -0.004683  \n",
       "447          0.041451         -0.007774  \n",
       "\n",
       "[448 rows x 302 columns]"
      ]
     },
     "execution_count": 1,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import pandas as pd\n",
    "pd.read_csv(\"/home/jykim/Project_poster/data_emb/chem_scaff_train_graph2vec_D300.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      ">>> read the data file ... \n",
      "\n",
      ">>> create mol from smiles ... \n",
      ">>> create nx from mol ... \n",
      ">>> create graph embedding ... \n",
      "(307, 300)\n",
      ">>> create graph embedding ... \n",
      "(307, 128)\n"
     ]
    }
   ],
   "source": [
    "## https://towardsdatascience.com/basic-molecular-representation-for-machine-learning-b6be52e9ff76\n",
    "# import rdkit/networkx/graph2vec ---------------------------------------------\n",
    "from rdkit import Chem\n",
    "import networkx as nx\n",
    "from karateclub import Graph2Vec\n",
    "\n",
    "# import numpy/pandas ---------------------------------------------------------\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "\n",
    "print(\">>> read the data file ... \")\n",
    "\n",
    "import pandas as pd\n",
    "\n",
    "train_smiles = pd.read_csv(\"/home/jykim/Project_poster/data_split/random_train_response.csv\")[[\"pubchem\",\"SMILES2\"]].drop_duplicates().reset_index(drop=True)\n",
    "test_smiles = pd.read_csv(\"/home/jykim/Project_poster/data_split/random_test_response.csv\")[[\"pubchem\",\"SMILES2\"]].drop_duplicates().reset_index(drop=True)\n",
    "print()\n",
    "\n",
    "print(\">>> create mol from smiles ... \")\n",
    "train_smiles['mol'] = train_smiles['SMILES2'].apply(lambda x: Chem.MolFromSmiles(x)) \n",
    "test_smiles['mol'] = test_smiles['SMILES2'].apply(lambda x: Chem.MolFromSmiles(x)) \n",
    "\n",
    "# define the function for coverting rdkit object to networkx object -----------     \n",
    "def mol_to_nx(mol):\n",
    "    G = nx.Graph()\n",
    "\n",
    "    for atom in mol.GetAtoms():\n",
    "        G.add_node(atom.GetIdx(),\n",
    "                   atomic_num=atom.GetAtomicNum(),\n",
    "                   is_aromatic=atom.GetIsAromatic(),\n",
    "                   atom_symbol=atom.GetSymbol())\n",
    "        \n",
    "    for bond in mol.GetBonds():\n",
    "        G.add_edge(bond.GetBeginAtomIdx(),\n",
    "                   bond.GetEndAtomIdx(),\n",
    "                   bond_type=bond.GetBondType())\n",
    "        \n",
    "    return G\n",
    "\n",
    "print(\">>> create nx from mol ... \")\n",
    "train_smiles['graph'] = train_smiles['mol'].apply(lambda x: mol_to_nx(x))\n",
    "test_smiles['graph'] = test_smiles['mol'].apply(lambda x: mol_to_nx(x))\n",
    "\n",
    "print(\">>> create graph embedding ... \")\n",
    "model_300 = Graph2Vec(dimensions=300)\n",
    "model_300.fit(train_smiles['graph'])\n",
    "train_smiles_graph2vec_300 = model_300.infer(train_smiles['graph'])\n",
    "test_smiles_graph2vec_300 = model_300.infer(test_smiles['graph'])\n",
    "\n",
    "print(train_smiles_graph2vec_300.shape)\n",
    "\n",
    "print(\">>> create graph embedding ... \")\n",
    "model = Graph2Vec()\n",
    "model.fit(train_smiles['graph'])\n",
    "train_smiles_graph2vec = model.infer(train_smiles['graph'])\n",
    "test_smiles_graph2vec = model.infer(test_smiles['graph'])\n",
    "\n",
    "print(train_smiles_graph2vec.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(307, 130)"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_emb = pd.DataFrame(train_smiles_graph2vec)\n",
    "test_emb = pd.DataFrame(test_smiles_graph2vec)\n",
    "train_emb.columns = [f\"graph2vec_emb{i+1}\" for i in range(train_smiles_graph2vec.shape[-1])]\n",
    "test_emb.columns = [f\"graph2vec_emb{i+1}\" for i in range(test_smiles_graph2vec.shape[-1])]\n",
    "train_mer = pd.concat([train_smiles[['pubchem', 'SMILES2']], train_emb], axis=1)\n",
    "test_mer = pd.concat([test_smiles[['pubchem', 'SMILES2']], test_emb], axis=1)\n",
    "train_mer.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "train_mer.to_csv(\"/home/jykim/Project_poster/data_emb/chem_stratified_random_train_graph2vec_D128.txt\",index=False,sep=\"\\t\")\n",
    "test_mer.to_csv(\"/home/jykim/Project_poster/data_emb/chem_stratified_random_test_graph2vec_D128.txt\",index=False,sep=\"\\t\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(307, 302)"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "train_emb = pd.DataFrame(train_smiles_graph2vec_300)\n",
    "test_emb = pd.DataFrame(test_smiles_graph2vec_300)\n",
    "train_emb.columns = [f\"graph2vec_emb{i+1}\" for i in range(train_smiles_graph2vec_300.shape[-1])]\n",
    "test_emb.columns = [f\"graph2vec_emb{i+1}\" for i in range(test_smiles_graph2vec_300.shape[-1])]\n",
    "train_mer = pd.concat([train_smiles[['pubchem', 'SMILES2']], train_emb], axis=1)\n",
    "test_mer = pd.concat([test_smiles[['pubchem', 'SMILES2']], test_emb], axis=1)\n",
    "train_mer.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "train_mer.to_csv(\"/home/jykim/Project_poster/data_emb/chem_stratified_random_train_graph2vec_D300.txt\",index=False,sep=\"\\t\")\n",
    "test_mer.to_csv(\"/home/jykim/Project_poster/data_emb/chem_stratified_random_test_graph2vec_D300.txt\",index=False,sep=\"\\t\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "Downloading (…)olve/main/vocab.json: 100%|██████████| 40.5k/40.5k [00:00<00:00, 42.4MB/s]\n",
      "Downloading (…)olve/main/merges.txt: 100%|██████████| 24.4k/24.4k [00:00<00:00, 2.37MB/s]\n",
      "Downloading (…)lve/main/config.json: 100%|██████████| 700/700 [00:00<00:00, 411kB/s]\n",
      "Downloading pytorch_model.bin: 100%|██████████| 409M/409M [00:43<00:00, 9.42MB/s] \n",
      "Token indices sequence length is longer than the specified maximum sequence length for this model (208 > 128). Running this sequence through the model will result in indexing errors\n",
      "You're using a RobertaTokenizerFast tokenizer. Please note that with a fast tokenizer, using the `__call__` method is faster than using a method to encode the text followed by a call to the `pad` method to get a padded encoding.\n"
     ]
    }
   ],
   "source": [
    "from transformers import RobertaTokenizerFast, RobertaForMaskedLM, DataCollatorWithPadding\n",
    "\n",
    "tokenizer = RobertaTokenizerFast.from_pretrained(\"entropy/roberta_zinc_480m\", max_len=128)\n",
    "model = RobertaForMaskedLM.from_pretrained('entropy/roberta_zinc_480m')\n",
    "collator = DataCollatorWithPadding(tokenizer, padding=True, return_tensors='pt')\n",
    "\n",
    "inputs = collator(tokenizer(unique_chem))\n",
    "outputs = model(**inputs, output_hidden_states=True)\n",
    "full_embeddings = outputs[1][-1]\n",
    "mask = inputs['attention_mask']\n",
    "embeddings = ((full_embeddings * mask.unsqueeze(-1)).sum(1) / mask.sum(-1).unsqueeze(-1))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "      <th>7</th>\n",
       "      <th>8</th>\n",
       "      <th>9</th>\n",
       "      <th>...</th>\n",
       "      <th>758</th>\n",
       "      <th>759</th>\n",
       "      <th>760</th>\n",
       "      <th>761</th>\n",
       "      <th>762</th>\n",
       "      <th>763</th>\n",
       "      <th>764</th>\n",
       "      <th>765</th>\n",
       "      <th>766</th>\n",
       "      <th>767</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>B([C@H](CC(C)C)NC(=O)[C@H](CC1=CC=CC=C1)NC(=O)C2=NC=CN=C2)(O)O</th>\n",
       "      <td>0.769909</td>\n",
       "      <td>0.589413</td>\n",
       "      <td>0.608572</td>\n",
       "      <td>-0.106093</td>\n",
       "      <td>-0.363628</td>\n",
       "      <td>0.560863</td>\n",
       "      <td>0.705489</td>\n",
       "      <td>-0.446779</td>\n",
       "      <td>0.234280</td>\n",
       "      <td>-0.143143</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.256257</td>\n",
       "      <td>0.215960</td>\n",
       "      <td>-0.224795</td>\n",
       "      <td>-0.469627</td>\n",
       "      <td>-0.218746</td>\n",
       "      <td>-0.056464</td>\n",
       "      <td>0.781002</td>\n",
       "      <td>0.158725</td>\n",
       "      <td>0.273952</td>\n",
       "      <td>-0.835474</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>C/C(=C(\\C#N)/C(=O)NC1=C(C=CC(=C1)Br)Br)/O</th>\n",
       "      <td>0.518817</td>\n",
       "      <td>0.587653</td>\n",
       "      <td>-0.582427</td>\n",
       "      <td>-0.285095</td>\n",
       "      <td>0.609501</td>\n",
       "      <td>0.666424</td>\n",
       "      <td>-0.396823</td>\n",
       "      <td>-1.222021</td>\n",
       "      <td>0.744643</td>\n",
       "      <td>-0.796415</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.048828</td>\n",
       "      <td>0.373068</td>\n",
       "      <td>-0.400755</td>\n",
       "      <td>-0.454683</td>\n",
       "      <td>-0.284907</td>\n",
       "      <td>-0.219481</td>\n",
       "      <td>1.067809</td>\n",
       "      <td>0.338333</td>\n",
       "      <td>-0.384799</td>\n",
       "      <td>-0.558982</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>C/C(=C\\C(=O)NC1=CC=CC=C1C(=O)O)/C2=CC3=CC=CC=C3C=C2</th>\n",
       "      <td>0.637206</td>\n",
       "      <td>0.891225</td>\n",
       "      <td>0.415047</td>\n",
       "      <td>-0.002806</td>\n",
       "      <td>-0.311565</td>\n",
       "      <td>0.218364</td>\n",
       "      <td>0.195051</td>\n",
       "      <td>-0.957259</td>\n",
       "      <td>0.030755</td>\n",
       "      <td>-0.916918</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.343767</td>\n",
       "      <td>0.538986</td>\n",
       "      <td>-0.424798</td>\n",
       "      <td>0.040175</td>\n",
       "      <td>-0.435832</td>\n",
       "      <td>0.074430</td>\n",
       "      <td>0.814816</td>\n",
       "      <td>-0.016312</td>\n",
       "      <td>0.177228</td>\n",
       "      <td>-0.547030</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>C/C/1=C\\CC[C@@]2([C@H](O2)[C@@H]3[C@@H](CC1)C(=C)C(=O)O3)C</th>\n",
       "      <td>0.636737</td>\n",
       "      <td>1.366430</td>\n",
       "      <td>-0.224164</td>\n",
       "      <td>0.277373</td>\n",
       "      <td>-0.305194</td>\n",
       "      <td>0.041330</td>\n",
       "      <td>-0.076675</td>\n",
       "      <td>-1.423855</td>\n",
       "      <td>0.332640</td>\n",
       "      <td>-0.320613</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.010064</td>\n",
       "      <td>0.082721</td>\n",
       "      <td>-0.448407</td>\n",
       "      <td>-0.551436</td>\n",
       "      <td>-0.046794</td>\n",
       "      <td>-0.508773</td>\n",
       "      <td>0.716005</td>\n",
       "      <td>0.620749</td>\n",
       "      <td>0.527983</td>\n",
       "      <td>-0.929967</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>C1/C(=C\\C2=CC=CS2)/C(=O)/C(=C/C3=CC=CS3)/C1</th>\n",
       "      <td>0.464225</td>\n",
       "      <td>1.357864</td>\n",
       "      <td>-0.349610</td>\n",
       "      <td>-0.485559</td>\n",
       "      <td>-0.208903</td>\n",
       "      <td>-0.089278</td>\n",
       "      <td>-0.141061</td>\n",
       "      <td>-0.923250</td>\n",
       "      <td>0.328714</td>\n",
       "      <td>-0.588264</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.395005</td>\n",
       "      <td>0.274714</td>\n",
       "      <td>-0.449836</td>\n",
       "      <td>-0.724709</td>\n",
       "      <td>-0.345602</td>\n",
       "      <td>-0.070575</td>\n",
       "      <td>0.562755</td>\n",
       "      <td>0.288662</td>\n",
       "      <td>-0.158820</td>\n",
       "      <td>-0.168093</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>C[C@H]1[C@@H]([C@H]([C@H]([C@@H](O1)OC2=C(OC3=CC(=CC(=C3C2=O)O)O)C4=CC=C(C=C4)O)O)OC(=O)C)OC(=O)C</th>\n",
       "      <td>0.896253</td>\n",
       "      <td>1.247702</td>\n",
       "      <td>-0.356537</td>\n",
       "      <td>0.100901</td>\n",
       "      <td>-0.072061</td>\n",
       "      <td>0.832806</td>\n",
       "      <td>0.209098</td>\n",
       "      <td>-1.471765</td>\n",
       "      <td>0.796586</td>\n",
       "      <td>-0.533733</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.091570</td>\n",
       "      <td>0.043544</td>\n",
       "      <td>-0.276879</td>\n",
       "      <td>-0.299200</td>\n",
       "      <td>-0.052970</td>\n",
       "      <td>-0.193333</td>\n",
       "      <td>0.912807</td>\n",
       "      <td>0.820993</td>\n",
       "      <td>0.279554</td>\n",
       "      <td>-1.156435</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>C[C@H]1[C@H]([C@H](C[C@@H](O1)O[C@H]2C[C@@](CC3=C2C(=C4C(=C3O)C(=O)C5=C(C4=O)C(=CC=C5)OC)O)(C(=O)CO)O)N)O</th>\n",
       "      <td>0.720500</td>\n",
       "      <td>1.058160</td>\n",
       "      <td>-0.589696</td>\n",
       "      <td>0.394371</td>\n",
       "      <td>0.178650</td>\n",
       "      <td>0.734409</td>\n",
       "      <td>0.081090</td>\n",
       "      <td>-1.168755</td>\n",
       "      <td>0.650734</td>\n",
       "      <td>-0.778704</td>\n",
       "      <td>...</td>\n",
       "      <td>-0.090283</td>\n",
       "      <td>0.028766</td>\n",
       "      <td>-0.421501</td>\n",
       "      <td>-0.231163</td>\n",
       "      <td>-0.462597</td>\n",
       "      <td>-0.131828</td>\n",
       "      <td>0.855342</td>\n",
       "      <td>1.094190</td>\n",
       "      <td>-0.234616</td>\n",
       "      <td>-1.059449</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>C[C@]1(CCCN1C2=NN3C=CC=C3C(=N2)NC4=NNC(=C4)C5CC5)C(=O)NC6=CN=C(C=C6)F</th>\n",
       "      <td>0.565937</td>\n",
       "      <td>1.030881</td>\n",
       "      <td>-0.478616</td>\n",
       "      <td>0.107964</td>\n",
       "      <td>0.425736</td>\n",
       "      <td>0.726534</td>\n",
       "      <td>0.033333</td>\n",
       "      <td>-0.749608</td>\n",
       "      <td>0.527398</td>\n",
       "      <td>-0.532909</td>\n",
       "      <td>...</td>\n",
       "      <td>0.264803</td>\n",
       "      <td>0.303953</td>\n",
       "      <td>-0.254413</td>\n",
       "      <td>-0.427697</td>\n",
       "      <td>-0.199823</td>\n",
       "      <td>-0.674186</td>\n",
       "      <td>1.010119</td>\n",
       "      <td>0.940810</td>\n",
       "      <td>0.200033</td>\n",
       "      <td>-0.912970</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>C[C@]12CC[C@H]3[C@H]([C@@H]1CC[C@@H]2O)[C@@H](CC4=C3C=CC(=C4)O)CCCCCCCCCS(=O)CCCC(C(F)(F)F)(F)F</th>\n",
       "      <td>0.922045</td>\n",
       "      <td>0.976460</td>\n",
       "      <td>-0.113270</td>\n",
       "      <td>0.487133</td>\n",
       "      <td>-0.011607</td>\n",
       "      <td>0.239847</td>\n",
       "      <td>0.183816</td>\n",
       "      <td>-0.664579</td>\n",
       "      <td>0.673248</td>\n",
       "      <td>-0.579886</td>\n",
       "      <td>...</td>\n",
       "      <td>0.028962</td>\n",
       "      <td>-0.135262</td>\n",
       "      <td>-0.391524</td>\n",
       "      <td>-0.239150</td>\n",
       "      <td>-0.012936</td>\n",
       "      <td>-0.180363</td>\n",
       "      <td>1.186034</td>\n",
       "      <td>0.129698</td>\n",
       "      <td>-0.000261</td>\n",
       "      <td>-0.825458</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>N.N.[Cl-].[Cl-].[Pt+2]</th>\n",
       "      <td>0.652014</td>\n",
       "      <td>0.623213</td>\n",
       "      <td>-1.051629</td>\n",
       "      <td>0.423555</td>\n",
       "      <td>0.566028</td>\n",
       "      <td>1.277036</td>\n",
       "      <td>0.742684</td>\n",
       "      <td>-1.534920</td>\n",
       "      <td>1.152359</td>\n",
       "      <td>-0.631377</td>\n",
       "      <td>...</td>\n",
       "      <td>0.215512</td>\n",
       "      <td>0.090882</td>\n",
       "      <td>-0.341992</td>\n",
       "      <td>-0.033314</td>\n",
       "      <td>-0.061994</td>\n",
       "      <td>-0.411336</td>\n",
       "      <td>-0.174266</td>\n",
       "      <td>0.686838</td>\n",
       "      <td>0.210365</td>\n",
       "      <td>-0.768827</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>307 rows × 768 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                         0         1    \\\n",
       "B([C@H](CC(C)C)NC(=O)[C@H](CC1=CC=CC=C1)NC(=O)C...  0.769909  0.589413   \n",
       "C/C(=C(\\C#N)/C(=O)NC1=C(C=CC(=C1)Br)Br)/O           0.518817  0.587653   \n",
       "C/C(=C\\C(=O)NC1=CC=CC=C1C(=O)O)/C2=CC3=CC=CC=C3...  0.637206  0.891225   \n",
       "C/C/1=C\\CC[C@@]2([C@H](O2)[C@@H]3[C@@H](CC1)C(=...  0.636737  1.366430   \n",
       "C1/C(=C\\C2=CC=CS2)/C(=O)/C(=C/C3=CC=CS3)/C1         0.464225  1.357864   \n",
       "...                                                      ...       ...   \n",
       "C[C@H]1[C@@H]([C@H]([C@H]([C@@H](O1)OC2=C(OC3=C...  0.896253  1.247702   \n",
       "C[C@H]1[C@H]([C@H](C[C@@H](O1)O[C@H]2C[C@@](CC3...  0.720500  1.058160   \n",
       "C[C@]1(CCCN1C2=NN3C=CC=C3C(=N2)NC4=NNC(=C4)C5CC...  0.565937  1.030881   \n",
       "C[C@]12CC[C@H]3[C@H]([C@@H]1CC[C@@H]2O)[C@@H](C...  0.922045  0.976460   \n",
       "N.N.[Cl-].[Cl-].[Pt+2]                              0.652014  0.623213   \n",
       "\n",
       "                                                         2         3    \\\n",
       "B([C@H](CC(C)C)NC(=O)[C@H](CC1=CC=CC=C1)NC(=O)C...  0.608572 -0.106093   \n",
       "C/C(=C(\\C#N)/C(=O)NC1=C(C=CC(=C1)Br)Br)/O          -0.582427 -0.285095   \n",
       "C/C(=C\\C(=O)NC1=CC=CC=C1C(=O)O)/C2=CC3=CC=CC=C3...  0.415047 -0.002806   \n",
       "C/C/1=C\\CC[C@@]2([C@H](O2)[C@@H]3[C@@H](CC1)C(=... -0.224164  0.277373   \n",
       "C1/C(=C\\C2=CC=CS2)/C(=O)/C(=C/C3=CC=CS3)/C1        -0.349610 -0.485559   \n",
       "...                                                      ...       ...   \n",
       "C[C@H]1[C@@H]([C@H]([C@H]([C@@H](O1)OC2=C(OC3=C... -0.356537  0.100901   \n",
       "C[C@H]1[C@H]([C@H](C[C@@H](O1)O[C@H]2C[C@@](CC3... -0.589696  0.394371   \n",
       "C[C@]1(CCCN1C2=NN3C=CC=C3C(=N2)NC4=NNC(=C4)C5CC... -0.478616  0.107964   \n",
       "C[C@]12CC[C@H]3[C@H]([C@@H]1CC[C@@H]2O)[C@@H](C... -0.113270  0.487133   \n",
       "N.N.[Cl-].[Cl-].[Pt+2]                             -1.051629  0.423555   \n",
       "\n",
       "                                                         4         5    \\\n",
       "B([C@H](CC(C)C)NC(=O)[C@H](CC1=CC=CC=C1)NC(=O)C... -0.363628  0.560863   \n",
       "C/C(=C(\\C#N)/C(=O)NC1=C(C=CC(=C1)Br)Br)/O           0.609501  0.666424   \n",
       "C/C(=C\\C(=O)NC1=CC=CC=C1C(=O)O)/C2=CC3=CC=CC=C3... -0.311565  0.218364   \n",
       "C/C/1=C\\CC[C@@]2([C@H](O2)[C@@H]3[C@@H](CC1)C(=... -0.305194  0.041330   \n",
       "C1/C(=C\\C2=CC=CS2)/C(=O)/C(=C/C3=CC=CS3)/C1        -0.208903 -0.089278   \n",
       "...                                                      ...       ...   \n",
       "C[C@H]1[C@@H]([C@H]([C@H]([C@@H](O1)OC2=C(OC3=C... -0.072061  0.832806   \n",
       "C[C@H]1[C@H]([C@H](C[C@@H](O1)O[C@H]2C[C@@](CC3...  0.178650  0.734409   \n",
       "C[C@]1(CCCN1C2=NN3C=CC=C3C(=N2)NC4=NNC(=C4)C5CC...  0.425736  0.726534   \n",
       "C[C@]12CC[C@H]3[C@H]([C@@H]1CC[C@@H]2O)[C@@H](C... -0.011607  0.239847   \n",
       "N.N.[Cl-].[Cl-].[Pt+2]                              0.566028  1.277036   \n",
       "\n",
       "                                                         6         7    \\\n",
       "B([C@H](CC(C)C)NC(=O)[C@H](CC1=CC=CC=C1)NC(=O)C...  0.705489 -0.446779   \n",
       "C/C(=C(\\C#N)/C(=O)NC1=C(C=CC(=C1)Br)Br)/O          -0.396823 -1.222021   \n",
       "C/C(=C\\C(=O)NC1=CC=CC=C1C(=O)O)/C2=CC3=CC=CC=C3...  0.195051 -0.957259   \n",
       "C/C/1=C\\CC[C@@]2([C@H](O2)[C@@H]3[C@@H](CC1)C(=... -0.076675 -1.423855   \n",
       "C1/C(=C\\C2=CC=CS2)/C(=O)/C(=C/C3=CC=CS3)/C1        -0.141061 -0.923250   \n",
       "...                                                      ...       ...   \n",
       "C[C@H]1[C@@H]([C@H]([C@H]([C@@H](O1)OC2=C(OC3=C...  0.209098 -1.471765   \n",
       "C[C@H]1[C@H]([C@H](C[C@@H](O1)O[C@H]2C[C@@](CC3...  0.081090 -1.168755   \n",
       "C[C@]1(CCCN1C2=NN3C=CC=C3C(=N2)NC4=NNC(=C4)C5CC...  0.033333 -0.749608   \n",
       "C[C@]12CC[C@H]3[C@H]([C@@H]1CC[C@@H]2O)[C@@H](C...  0.183816 -0.664579   \n",
       "N.N.[Cl-].[Cl-].[Pt+2]                              0.742684 -1.534920   \n",
       "\n",
       "                                                         8         9    ...  \\\n",
       "B([C@H](CC(C)C)NC(=O)[C@H](CC1=CC=CC=C1)NC(=O)C...  0.234280 -0.143143  ...   \n",
       "C/C(=C(\\C#N)/C(=O)NC1=C(C=CC(=C1)Br)Br)/O           0.744643 -0.796415  ...   \n",
       "C/C(=C\\C(=O)NC1=CC=CC=C1C(=O)O)/C2=CC3=CC=CC=C3...  0.030755 -0.916918  ...   \n",
       "C/C/1=C\\CC[C@@]2([C@H](O2)[C@@H]3[C@@H](CC1)C(=...  0.332640 -0.320613  ...   \n",
       "C1/C(=C\\C2=CC=CS2)/C(=O)/C(=C/C3=CC=CS3)/C1         0.328714 -0.588264  ...   \n",
       "...                                                      ...       ...  ...   \n",
       "C[C@H]1[C@@H]([C@H]([C@H]([C@@H](O1)OC2=C(OC3=C...  0.796586 -0.533733  ...   \n",
       "C[C@H]1[C@H]([C@H](C[C@@H](O1)O[C@H]2C[C@@](CC3...  0.650734 -0.778704  ...   \n",
       "C[C@]1(CCCN1C2=NN3C=CC=C3C(=N2)NC4=NNC(=C4)C5CC...  0.527398 -0.532909  ...   \n",
       "C[C@]12CC[C@H]3[C@H]([C@@H]1CC[C@@H]2O)[C@@H](C...  0.673248 -0.579886  ...   \n",
       "N.N.[Cl-].[Cl-].[Pt+2]                              1.152359 -0.631377  ...   \n",
       "\n",
       "                                                         758       759  \\\n",
       "B([C@H](CC(C)C)NC(=O)[C@H](CC1=CC=CC=C1)NC(=O)C... -0.256257  0.215960   \n",
       "C/C(=C(\\C#N)/C(=O)NC1=C(C=CC(=C1)Br)Br)/O          -0.048828  0.373068   \n",
       "C/C(=C\\C(=O)NC1=CC=CC=C1C(=O)O)/C2=CC3=CC=CC=C3... -0.343767  0.538986   \n",
       "C/C/1=C\\CC[C@@]2([C@H](O2)[C@@H]3[C@@H](CC1)C(=... -0.010064  0.082721   \n",
       "C1/C(=C\\C2=CC=CS2)/C(=O)/C(=C/C3=CC=CS3)/C1        -0.395005  0.274714   \n",
       "...                                                      ...       ...   \n",
       "C[C@H]1[C@@H]([C@H]([C@H]([C@@H](O1)OC2=C(OC3=C... -0.091570  0.043544   \n",
       "C[C@H]1[C@H]([C@H](C[C@@H](O1)O[C@H]2C[C@@](CC3... -0.090283  0.028766   \n",
       "C[C@]1(CCCN1C2=NN3C=CC=C3C(=N2)NC4=NNC(=C4)C5CC...  0.264803  0.303953   \n",
       "C[C@]12CC[C@H]3[C@H]([C@@H]1CC[C@@H]2O)[C@@H](C...  0.028962 -0.135262   \n",
       "N.N.[Cl-].[Cl-].[Pt+2]                              0.215512  0.090882   \n",
       "\n",
       "                                                         760       761  \\\n",
       "B([C@H](CC(C)C)NC(=O)[C@H](CC1=CC=CC=C1)NC(=O)C... -0.224795 -0.469627   \n",
       "C/C(=C(\\C#N)/C(=O)NC1=C(C=CC(=C1)Br)Br)/O          -0.400755 -0.454683   \n",
       "C/C(=C\\C(=O)NC1=CC=CC=C1C(=O)O)/C2=CC3=CC=CC=C3... -0.424798  0.040175   \n",
       "C/C/1=C\\CC[C@@]2([C@H](O2)[C@@H]3[C@@H](CC1)C(=... -0.448407 -0.551436   \n",
       "C1/C(=C\\C2=CC=CS2)/C(=O)/C(=C/C3=CC=CS3)/C1        -0.449836 -0.724709   \n",
       "...                                                      ...       ...   \n",
       "C[C@H]1[C@@H]([C@H]([C@H]([C@@H](O1)OC2=C(OC3=C... -0.276879 -0.299200   \n",
       "C[C@H]1[C@H]([C@H](C[C@@H](O1)O[C@H]2C[C@@](CC3... -0.421501 -0.231163   \n",
       "C[C@]1(CCCN1C2=NN3C=CC=C3C(=N2)NC4=NNC(=C4)C5CC... -0.254413 -0.427697   \n",
       "C[C@]12CC[C@H]3[C@H]([C@@H]1CC[C@@H]2O)[C@@H](C... -0.391524 -0.239150   \n",
       "N.N.[Cl-].[Cl-].[Pt+2]                             -0.341992 -0.033314   \n",
       "\n",
       "                                                         762       763  \\\n",
       "B([C@H](CC(C)C)NC(=O)[C@H](CC1=CC=CC=C1)NC(=O)C... -0.218746 -0.056464   \n",
       "C/C(=C(\\C#N)/C(=O)NC1=C(C=CC(=C1)Br)Br)/O          -0.284907 -0.219481   \n",
       "C/C(=C\\C(=O)NC1=CC=CC=C1C(=O)O)/C2=CC3=CC=CC=C3... -0.435832  0.074430   \n",
       "C/C/1=C\\CC[C@@]2([C@H](O2)[C@@H]3[C@@H](CC1)C(=... -0.046794 -0.508773   \n",
       "C1/C(=C\\C2=CC=CS2)/C(=O)/C(=C/C3=CC=CS3)/C1        -0.345602 -0.070575   \n",
       "...                                                      ...       ...   \n",
       "C[C@H]1[C@@H]([C@H]([C@H]([C@@H](O1)OC2=C(OC3=C... -0.052970 -0.193333   \n",
       "C[C@H]1[C@H]([C@H](C[C@@H](O1)O[C@H]2C[C@@](CC3... -0.462597 -0.131828   \n",
       "C[C@]1(CCCN1C2=NN3C=CC=C3C(=N2)NC4=NNC(=C4)C5CC... -0.199823 -0.674186   \n",
       "C[C@]12CC[C@H]3[C@H]([C@@H]1CC[C@@H]2O)[C@@H](C... -0.012936 -0.180363   \n",
       "N.N.[Cl-].[Cl-].[Pt+2]                             -0.061994 -0.411336   \n",
       "\n",
       "                                                         764       765  \\\n",
       "B([C@H](CC(C)C)NC(=O)[C@H](CC1=CC=CC=C1)NC(=O)C...  0.781002  0.158725   \n",
       "C/C(=C(\\C#N)/C(=O)NC1=C(C=CC(=C1)Br)Br)/O           1.067809  0.338333   \n",
       "C/C(=C\\C(=O)NC1=CC=CC=C1C(=O)O)/C2=CC3=CC=CC=C3...  0.814816 -0.016312   \n",
       "C/C/1=C\\CC[C@@]2([C@H](O2)[C@@H]3[C@@H](CC1)C(=...  0.716005  0.620749   \n",
       "C1/C(=C\\C2=CC=CS2)/C(=O)/C(=C/C3=CC=CS3)/C1         0.562755  0.288662   \n",
       "...                                                      ...       ...   \n",
       "C[C@H]1[C@@H]([C@H]([C@H]([C@@H](O1)OC2=C(OC3=C...  0.912807  0.820993   \n",
       "C[C@H]1[C@H]([C@H](C[C@@H](O1)O[C@H]2C[C@@](CC3...  0.855342  1.094190   \n",
       "C[C@]1(CCCN1C2=NN3C=CC=C3C(=N2)NC4=NNC(=C4)C5CC...  1.010119  0.940810   \n",
       "C[C@]12CC[C@H]3[C@H]([C@@H]1CC[C@@H]2O)[C@@H](C...  1.186034  0.129698   \n",
       "N.N.[Cl-].[Cl-].[Pt+2]                             -0.174266  0.686838   \n",
       "\n",
       "                                                         766       767  \n",
       "B([C@H](CC(C)C)NC(=O)[C@H](CC1=CC=CC=C1)NC(=O)C...  0.273952 -0.835474  \n",
       "C/C(=C(\\C#N)/C(=O)NC1=C(C=CC(=C1)Br)Br)/O          -0.384799 -0.558982  \n",
       "C/C(=C\\C(=O)NC1=CC=CC=C1C(=O)O)/C2=CC3=CC=CC=C3...  0.177228 -0.547030  \n",
       "C/C/1=C\\CC[C@@]2([C@H](O2)[C@@H]3[C@@H](CC1)C(=...  0.527983 -0.929967  \n",
       "C1/C(=C\\C2=CC=CS2)/C(=O)/C(=C/C3=CC=CS3)/C1        -0.158820 -0.168093  \n",
       "...                                                      ...       ...  \n",
       "C[C@H]1[C@@H]([C@H]([C@H]([C@@H](O1)OC2=C(OC3=C...  0.279554 -1.156435  \n",
       "C[C@H]1[C@H]([C@H](C[C@@H](O1)O[C@H]2C[C@@](CC3... -0.234616 -1.059449  \n",
       "C[C@]1(CCCN1C2=NN3C=CC=C3C(=N2)NC4=NNC(=C4)C5CC...  0.200033 -0.912970  \n",
       "C[C@]12CC[C@H]3[C@H]([C@@H]1CC[C@@H]2O)[C@@H](C... -0.000261 -0.825458  \n",
       "N.N.[Cl-].[Cl-].[Pt+2]                              0.210365 -0.768827  \n",
       "\n",
       "[307 rows x 768 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "embed_df = pd.DataFrame(embeddings.detach().numpy(),index=unique_chem)\n",
    "embed_df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "embed_df.to_csv(\"/home/jykim/Project_poster/final_presentation/data_emb/chem_roberta_zinc_480m_D768.txt\",sep=\"\\t\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "automl",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
